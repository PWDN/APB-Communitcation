/* Generated by Yosys 0.37 (git sha1 a5c7f69ed8f, gcc 13.2.0 -fPIC -Os) */

module apb_slave_exe_w48(i_PCLK, i_PRESETn, i_PADDR, i_PSEL, i_PENABLE, i_PWRITE, i_PWDATA, o_PREADY, o_PRDATA, o_PSLVERR);
  wire [2:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire [2:0] _064_;
  wire [2:0] \exe_unit_w48_model.i_argA ;
  wire [2:0] \exe_unit_w48_model.i_argB ;
  wire \exe_unit_w48_model.i_clk ;
  wire [2:0] \exe_unit_w48_model.i_oper ;
  wire \exe_unit_w48_model.i_rsn ;
  wire \exe_unit_w48_model.next_error ;
  reg [2:0] \exe_unit_w48_model.next_result ;
  wire [2:0] \exe_unit_w48_model.o_result ;
  wire [3:0] \exe_unit_w48_model.o_status ;
  input [15:0] i_PADDR;
  wire [15:0] i_PADDR;
  input i_PCLK;
  wire i_PCLK;
  input i_PENABLE;
  wire i_PENABLE;
  input i_PRESETn;
  wire i_PRESETn;
  input i_PSEL;
  wire i_PSEL;
  input [2:0] i_PWDATA;
  wire [2:0] i_PWDATA;
  input i_PWRITE;
  wire i_PWRITE;
  output [2:0] o_PRDATA;
  reg [2:0] o_PRDATA;
  output o_PREADY;
  reg o_PREADY;
  output o_PSLVERR;
  wire o_PSLVERR;
  reg [2:0] s_in_argA;
  wire [2:0] s_in_argB;
  reg [2:0] s_in_oper;
  wire [2:0] s_model_outs;
  wire [2:0] s_model_status;
  assign _018_ = ~i_PWRITE;
  assign _019_ = ~i_PADDR[1];
  assign _020_ = ~i_PADDR[0];
  assign _021_ = ~i_PADDR[3];
  assign _022_ = ~i_PADDR[2];
  assign _023_ = ~s_in_oper[1];
  assign _024_ = ~s_in_oper[0];
  assign _001_ = i_PSEL & i_PENABLE;
  assign _025_ = _021_ & _022_;
  assign _026_ = i_PADDR[3] | i_PADDR[2];
  assign _027_ = _019_ & _025_;
  assign _028_ = i_PADDR[1] | _026_;
  assign _029_ = i_PADDR[0] & _027_;
  assign _030_ = i_PADDR[1] & _020_;
  assign _031_ = _025_ & _030_;
  assign _032_ = _029_ | _031_;
  assign _033_ = i_PADDR[13] | i_PADDR[12];
  assign _034_ = i_PADDR[15] | i_PADDR[14];
  assign _035_ = _033_ | _034_;
  assign _036_ = ~_035_;
  assign _037_ = i_PADDR[5] | i_PADDR[4];
  assign _038_ = i_PADDR[7] | i_PADDR[6];
  assign _039_ = _037_ | _038_;
  assign _040_ = i_PADDR[9] | i_PADDR[8];
  assign _041_ = i_PADDR[11] | i_PADDR[10];
  assign _042_ = _040_ | _041_;
  assign _043_ = _039_ | _042_;
  assign _044_ = ~_043_;
  assign _045_ = _036_ & _044_;
  assign _046_ = i_PWRITE & i_PRESETn;
  assign _047_ = _001_ & _046_;
  assign _048_ = _045_ & _047_;
  assign _002_ = _032_ & _048_;
  assign _049_ = i_PADDR[0] | _028_;
  assign _050_ = ~_049_;
  assign _051_ = _045_ & _050_;
  assign _003_ = _047_ & _051_;
  assign _052_ = \exe_unit_w48_model.next_result [2] | \exe_unit_w48_model.next_result [1];
  assign _053_ = \exe_unit_w48_model.next_result [0] | _052_;
  assign _004_ = ~_053_;
  assign _054_ = _029_ & _045_;
  assign _055_ = \exe_unit_w48_model.o_status [0] & _054_;
  assign _056_ = \exe_unit_w48_model.o_result [0] & _051_;
  assign _057_ = _055_ | _056_;
  assign _058_ = _018_ & _001_;
  assign _000_[0] = _057_ & _058_;
  assign _059_ = \exe_unit_w48_model.o_status [1] & _054_;
  assign _060_ = \exe_unit_w48_model.o_result [1] & _051_;
  assign _061_ = _059_ | _060_;
  assign _000_[1] = _058_ & _061_;
  assign _062_ = \exe_unit_w48_model.o_status [2] & _054_;
  assign _063_ = \exe_unit_w48_model.o_status [1] & _051_;
  assign _005_ = _062_ | _063_;
  assign _000_[2] = _058_ & _005_;
  assign _006_ = s_in_oper[2] | _023_;
  assign _007_ = s_in_oper[2] | _024_;
  assign _008_ = ~_007_;
  assign _009_ = s_in_oper[0] | _006_;
  assign _010_ = s_in_oper[1] | _007_;
  assign _011_ = s_in_argA[0] & _009_;
  assign _064_[0] = _010_ & _011_;
  assign _012_ = s_in_argA[0] & s_in_argA[2];
  assign _013_ = _008_ & _012_;
  assign _014_ = s_in_argA[1] ^ _013_;
  assign _064_[1] = _010_ & _014_;
  assign _015_ = s_in_argA[1] | _012_;
  assign _016_ = s_in_oper[1] & _015_;
  assign _017_ = _007_ | _016_;
  assign _064_[2] = s_in_argA[2] & _017_;
  always @*
    if (!s_in_oper[2]) \exe_unit_w48_model.next_result [0] = _064_[0];
  always @*
    if (!s_in_oper[2]) \exe_unit_w48_model.next_result [1] = _064_[1];
  always @*
    if (!s_in_oper[2]) \exe_unit_w48_model.next_result [2] = _064_[2];
  always @(posedge i_PCLK)
    if (_002_) s_in_argA[0] <= i_PWDATA[0];
  always @(posedge i_PCLK)
    if (_002_) s_in_argA[1] <= i_PWDATA[1];
  always @(posedge i_PCLK)
    if (_002_) s_in_argA[2] <= i_PWDATA[2];
  reg \exe_unit_w48_model.o_result_reg[0] ;
  always @(posedge i_PCLK, negedge i_PRESETn)
    if (!i_PRESETn) \exe_unit_w48_model.o_result_reg[0]  <= 1'h0;
    else \exe_unit_w48_model.o_result_reg[0]  <= \exe_unit_w48_model.next_result [0];
  assign \exe_unit_w48_model.o_result [0] = \exe_unit_w48_model.o_result_reg[0] ;
  reg \exe_unit_w48_model.o_result_reg[1] ;
  always @(posedge i_PCLK, negedge i_PRESETn)
    if (!i_PRESETn) \exe_unit_w48_model.o_result_reg[1]  <= 1'h0;
    else \exe_unit_w48_model.o_result_reg[1]  <= \exe_unit_w48_model.next_result [1];
  assign \exe_unit_w48_model.o_result [1] = \exe_unit_w48_model.o_result_reg[1] ;
  reg \exe_unit_w48_model.o_status_reg[0] ;
  always @(posedge i_PCLK, negedge i_PRESETn)
    if (!i_PRESETn) \exe_unit_w48_model.o_status_reg[0]  <= 1'h0;
    else \exe_unit_w48_model.o_status_reg[0]  <= 1'h0;
  assign \exe_unit_w48_model.o_status [0] = \exe_unit_w48_model.o_status_reg[0] ;
  reg \exe_unit_w48_model.o_status_reg[1] ;
  always @(posedge i_PCLK, negedge i_PRESETn)
    if (!i_PRESETn) \exe_unit_w48_model.o_status_reg[1]  <= 1'h0;
    else \exe_unit_w48_model.o_status_reg[1]  <= \exe_unit_w48_model.next_result [2];
  assign \exe_unit_w48_model.o_status [1] = \exe_unit_w48_model.o_status_reg[1] ;
  reg \exe_unit_w48_model.o_status_reg[2] ;
  always @(posedge i_PCLK, negedge i_PRESETn)
    if (!i_PRESETn) \exe_unit_w48_model.o_status_reg[2]  <= 1'h0;
    else \exe_unit_w48_model.o_status_reg[2]  <= _004_;
  assign \exe_unit_w48_model.o_status [2] = \exe_unit_w48_model.o_status_reg[2] ;
  always @(posedge i_PCLK, negedge i_PRESETn)
    if (!i_PRESETn) o_PREADY <= 1'h0;
    else o_PREADY <= _001_;
  always @(posedge i_PCLK, negedge i_PRESETn)
    if (!i_PRESETn) o_PRDATA[0] <= 1'h0;
    else o_PRDATA[0] <= _000_[0];
  always @(posedge i_PCLK, negedge i_PRESETn)
    if (!i_PRESETn) o_PRDATA[1] <= 1'h0;
    else o_PRDATA[1] <= _000_[1];
  always @(posedge i_PCLK, negedge i_PRESETn)
    if (!i_PRESETn) o_PRDATA[2] <= 1'h0;
    else o_PRDATA[2] <= _000_[2];
  always @(posedge i_PCLK)
    if (_003_) s_in_oper[0] <= i_PWDATA[0];
  always @(posedge i_PCLK)
    if (_003_) s_in_oper[1] <= i_PWDATA[1];
  always @(posedge i_PCLK)
    if (_003_) s_in_oper[2] <= i_PWDATA[2];
  assign \exe_unit_w48_model.i_argA  = s_in_argA;
  assign \exe_unit_w48_model.i_argB  = 3'hx;
  assign \exe_unit_w48_model.i_clk  = i_PCLK;
  assign \exe_unit_w48_model.i_oper  = s_in_oper;
  assign \exe_unit_w48_model.i_rsn  = i_PRESETn;
  assign \exe_unit_w48_model.next_error  = 1'hx;
  assign \exe_unit_w48_model.o_result [2] = \exe_unit_w48_model.o_status [1];
  assign \exe_unit_w48_model.o_status [3] = 1'hx;
  assign o_PSLVERR = 1'h0;
  assign s_in_argB = 3'hx;
  assign s_model_outs = { \exe_unit_w48_model.o_status [1], \exe_unit_w48_model.o_result [1:0] };
  assign s_model_status = \exe_unit_w48_model.o_status [2:0];
endmodule
